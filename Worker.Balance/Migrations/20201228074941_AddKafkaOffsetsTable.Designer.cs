// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Worker.Balance.Data;

namespace Worker.Balance.Migrations
{
    [DbContext(typeof(BalanceContext))]
    [Migration("20201228074941_AddKafkaOffsetsTable")]
    partial class AddKafkaOffsetsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Worker.Balance.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Worker.Balance.Models.KafkaOffset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("LastProcessedMessageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("KafkaOffsets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastProcessedMessageId = -1L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
